# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/orb-intro/
orbs:
  # The python orb contains a set of prepackaged CircleCI configuration you can use repeatedly in your configuration files
  # Orb commands and jobs help you with common scripting around a language/tool
  # so you dont have to copy and paste it everywhere.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/python
  python: circleci/python@3.0.0
  #https://circleci.com/developer/orbs/orb/codecov/codecov
  codecov: codecov/codecov@5.3.0

jobs:
  werpy-unit-tests:
    docker:
    # A list of available CircleCI Docker convenience images are available here: https://circleci.com/developer/images/image/cimg/python
    # The executor is the environment in which the steps below will be executed - below will use a python 3.13.2 container
      - image: cimg/python:3.13.2
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
          # If `pip-dependency-file` is set to an empty string, no dependency file is used in the `pip install` command. 
          pip-dependency-file: ""
          # Add numpy and pandas as dependencies
          args: "numpy pandas cython meson ninja coverage"
      
      # Required - using Meson configure the build system and prepare for compilation
      # The builddir it creates is only temporary and will be auto deleted after the job is finished
      - run:  
          name: Setup Meson
          command: meson setup builddir

      # Required - runs Ninja to actually compile the source code and generate the outputs to the builddir directory
      - run:  
          name: Compile with Ninja
          command: ninja -C builddir
      
      # Optional - used for debugging
      - run:  
          name: Print contents of werpy
          command: ls -l /home/circleci/project/werpy/
      
      # Optional - used for debugging
      - run:  
          name: Print contents of builddir
          command: ls -l builddir

      # Required - moves compiled modules from builddir to werpy directory
      - run:  
          name: Move compiled modules
          #command: mv builddir/metrics.cpython-311-x86_64-linux-gnu.so werpy/
          command: mv builddir/*.so werpy/

      # Optional - used for debugging
      - run:  
          name: Print Python interpreter path
          command: which python
      
      # Optional - used for debugging
      - run:  
          name: Print Python module search path
          command: python -c "import sys; print(sys.path)"
      
      # Optional - used for debugging
      - run:  
          name: Print installed Python packages
          command: pip list

      # Required - runs unit tests
      - run:  
          name: Run unit tests
          #command: python -m unittest discover tests
          command: | 
            coverage run -m unittest discover tests
            coverage xml
      - codecov/upload:
          flags: unittests
          when: always

# Invoke jobs via workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  unit-tests:
    jobs:
      - werpy-unit-tests
